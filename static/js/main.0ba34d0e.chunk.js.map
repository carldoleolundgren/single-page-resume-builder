{"version":3,"sources":["components/Header.js","components/Experience.js","components/Education.js","components/Skills.js","components/ResumePreview.js","App.js","index.js"],"names":["styles","editIcons","padding","personalData","display","lineHeight","width","Header","props","saveNewData","editKey","newValue","setEditing","editing","savePersonalData","resumeData","personalDataList","placeholders","firstName","lastName","title","phone","email","address","github","careerObjective","property","push","Input","id","placeholder","defaultValue","style","IconButton","size","color","onClick","document","querySelector","value","Typography","variant","uniqid","CardHeader","TextField","multiline","rows","InputForm","useState","numOfResponsibilities","setNumOfResponsibiltiies","responsibilitiesArr","setResponsibilitiesArr","ResponsibilityInput","className","valuesArr","i","querySelectorAll","length","firstChild","updateStateArr","ResponsibilityInputsList","renderArr","index","label","type","InputLabelProps","shrink","Button","marginTop","submitNewJob","Job","descriptionList","responsibilities","map","responsibility","description","company","job","jobLocation","start","endDisplay","deleteJob","jobID","Experience","jobsList","jobs","submitNewSchool","School","school","deleteSchool","schoolID","schoolLocation","degree","graduationDisplay","accomplishments","Education","schoolList","schools","marginLeft","submitNewSkill","Skill","skill","deleteSkill","skillID","Skills","skillsList","skills","Address","addressElement","includes","arrayLength","split","street","cityStateZip","align","contactData","firstLine","secondLine","splitStr","str","newStr","slice","right","educationAndSkillsLi","fontWeight","toUpperCase","fontStyle","paddingLeft","marginBottom","Responsibility","responsibilitiesList","customGoldColor","resumeContainer","height","zIndex","overflow","backgroundColor","margin","outline","outlineOffset","resumeHeader","borderBottom","verticalAlign","contactDataSection","justifyContent","flexDirection","borderRight","clearFloats","clear","float","marginRight","wordWrap","maxWidth","contactIcon","nameBox","resumeBody","resumeBodyHeaders","textAlign","letterSpacing","educationAndSkills","listStyleType","objectiveAndExperience","link","textDecoration","ResumePreview","top","resumeTop","fontSize","Link","href","target","rel","gutterBottom","App","isInputting","setIsInputting","blankResumeData","localStorage","getItem","JSON","parse","setResumeData","useEffect","setItem","stringify","componentRef","useRef","months","centeredDiv","cardsWithMargins","paddingBottom","Card","CardContent","disabled","content","current","documentTitle","trigger","personalDataArr","resumeDataCopy","newJob","parseFloat","replace","endSort","numberOfResponsibilties","newResponsibility","children","month","toString","year","sort","a","b","jobsArray","findIndex","x","splice","newSchool","graduationSort","schoolsArray","newSkill","skillsArray","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ba34d0e.chunk.js","sourcesContent":["import React from 'react'\nimport uniqid from 'uniqid'\nimport IconButton from '@material-ui/core/IconButton'\nimport SaveIcon from '@material-ui/icons/Save'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport TextField from '@material-ui/core/TextField'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nconst styles = {\n  editIcons: {\n    padding: '0px 3px',\n  },\n  personalData: {\n    display: 'inline-block',\n    lineHeight: '30px',\n    width: '325px',\n  },\n}\n\nconst Header = (props) => {\n  function saveNewData(editKey, newValue) {\n    props.setEditing({ ...props.editing, [editKey]: false })\n    props.savePersonalData(editKey, newValue)\n  }\n\n  const personalData = props.resumeData.personalData\n  const personalDataList = [] //initiate array to hold all of the personal data input elements for later render\n  const placeholders = {\n    firstName: 'First Name',\n    lastName: 'Last Name',\n    title: 'Job Title',\n    phone: 'Phone Number',\n    email: 'Email Address',\n    address: 'Physical U.S. Address',\n    github: 'Link to Github Profile (leave out \"https://\")',\n    careerObjective:\n      'Describe your career objective in three to four sentences',\n  }\n\n  for (const property in personalData) {\n    personalDataList.push(\n      <div key={uniqid()}>\n        {!props.resumeData.personalData[property] || props.editing[property] ? (\n          <div>\n            <Input\n              id={property}\n              placeholder={placeholders[property]}\n              defaultValue={\n                props.resumeData.personalData[property]\n                  ? props.resumeData.personalData[property]\n                  : ''\n              }\n              style={{ width: '325px' }}\n            />\n            <IconButton\n              aria-label=\"save\"\n              size=\"small\"\n              style={styles.editIcons}\n              color=\"primary\"\n              onClick={() => {\n                saveNewData(\n                  property,\n                  document.querySelector(`#${property}`).value,\n                )\n              }}\n            >\n              <SaveIcon />\n            </IconButton>\n          </div>\n        ) : (\n          <div>\n            <Typography variant=\"body1\" style={styles.personalData}>\n              {props.resumeData.personalData[property]}\n            </Typography>\n            <IconButton\n              aria-label=\"edit\"\n              size=\"small\"\n              style={styles.editIcons}\n              onClick={() =>\n                props.setEditing({ ...props.editing, [property]: true })\n              }\n            >\n              <EditIcon />\n            </IconButton>\n          </div>\n        )}\n      </div>,\n    )\n  }\n\n  return (\n    <div>\n      <CardHeader title=\"Personal Data\" />\n      {personalDataList}\n      {!props.resumeData.careerObjective || props.editing.careerObjective ? (\n        <div>\n          <TextField\n            id=\"careerObjective\"\n            placeholder={placeholders.careerObjective}\n            defaultValue={\n              props.resumeData.careerObjective\n                ? props.resumeData.careerObjective\n                : ''\n            }\n            multiline\n            rows={4}\n            style={{ width: '650px' }}\n          />\n          <IconButton\n            aria-label=\"save\"\n            size=\"small\"\n            style={styles.editIcons}\n            color=\"primary\"\n            onClick={() =>\n              saveNewData(\n                'careerObjective',\n                document.querySelector(`#careerObjective`).value,\n              )\n            }\n          >\n            <SaveIcon />\n          </IconButton>\n        </div>\n      ) : (\n        <div>\n          <Typography\n            variant=\"body1\"\n            style={{\n              ...styles.personalData,\n              width: '650px',\n              lineHeight: '23px',\n            }}\n          >\n            {props.resumeData.careerObjective}\n          </Typography>\n          <IconButton\n            aria-label=\"edit\"\n            size=\"small\"\n            style={styles.editIcons}\n            onClick={() =>\n              props.setEditing({ ...props.editing, careerObjective: true })\n            }\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport uniqid from 'uniqid'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nconst InputForm = (props) => {\n  let [numOfResponsibilities, setNumOfResponsibiltiies] = useState(1)\n  let [responsibilitiesArr, setResponsibilitiesArr] = useState([])\n\n  const ResponsibilityInput = (props) => {\n    return (\n      <div>\n        <TextField\n          className=\"responsibilities\"\n          placeholder={`Enter work responsibility and/or accomplishment \\n(template can fit approx. 8 to 12 bullets on average)`}\n          multiline\n          rows={2}\n          style={{ width: '650px' }}\n          defaultValue={props.value}\n        />\n        <IconButton\n          onClick={() => {\n            let num = numOfResponsibilities + 1\n            setNumOfResponsibiltiies(num)\n            updateStateArr()\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n      </div>\n    )\n  }\n\n  //create an array of input elements for later render\n  const ResponsibilityInputsList = () => {\n    let renderArr = []\n\n    for (let i = 0; i < numOfResponsibilities; i++) {\n      renderArr.push(\n        <ResponsibilityInput\n          key={i}\n          index={i}\n          value={responsibilitiesArr[i]}\n        />,\n      )\n    }\n\n    return renderArr\n  }\n\n  function updateStateArr() {\n    let valuesArr = []\n\n    for (\n      let i = 0;\n      i < document.querySelectorAll('.responsibilities').length;\n      i++\n    ) {\n      valuesArr.push(\n        //Material-UI input element is actually a child of a child element\n        document.querySelectorAll('.responsibilities')[i].firstChild.firstChild \n          .value,\n      )\n    }\n\n    setResponsibilitiesArr(valuesArr)\n  }\n\n  return (\n    <div>\n      <Input\n        id=\"company\"\n        placeholder=\"Company Name\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <Input id=\"job\" placeholder=\"Job Title\" style={{ width: '325px' }} />\n      <br></br>\n      <Input\n        id=\"jobLocation\"\n        placeholder=\"Location\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <ResponsibilityInputsList />\n      <br></br>\n      <TextField\n        id=\"start\"\n        label=\"Start Date\"\n        type=\"month\"\n        defaultValue=\"\"\n        InputLabelProps={{ shrink: true }}\n      />\n      <br></br>\n      <TextField\n        id=\"end\"\n        label=\"End Date\"\n        type=\"month\"\n        defaultValue=\"\"\n        InputLabelProps={{ shrink: true }}\n      />\n      <br></br>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        style={{ marginTop: '7px' }}\n        onClick={() => {\n          props.submitNewJob()\n          setNumOfResponsibiltiies(1)\n          setResponsibilitiesArr([])\n        }}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nconst Job = (props) => {\n  const responsibiltiies = props.responsibilities\n  const descriptionList = responsibiltiies.map((responsibility) => (\n    <li key={uniqid()}>\n      <Typography variant=\"body2\">{responsibility.description}</Typography>\n    </li>\n  ))\n\n  return (\n    <li>\n      <Typography variant=\"body1\">{props.company}</Typography>\n      <Typography variant=\"body1\">{props.job}</Typography>\n      <Typography variant=\"body1\">{props.jobLocation}</Typography>\n      <Typography variant=\"body1\">\n        {props.start} to {props.endDisplay}\n      </Typography>\n      <ul>{descriptionList}</ul>\n      <IconButton\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n        onClick={() => props.deleteJob(props.jobID)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </li>\n  )\n}\n\nconst Experience = (props) => {\n  const jobs = props.resumeData.jobs\n  const jobsList = jobs.map((job) => (\n    <Job\n      key={uniqid()}\n      company={job.company}\n      job={job.job}\n      responsibilities={job.responsibilities}\n      jobLocation={job.jobLocation}\n      start={job.start}\n      endDisplay={job.endDisplay}\n      deleteJob={props.deleteJob}\n      jobID={job.jobID}\n    />\n  ))\n\n  return (\n    <div>\n      <CardHeader title=\"Work Experience\" />\n      <InputForm submitNewJob={props.submitNewJob} />\n      <ul>{jobsList}</ul>\n    </div>\n  )\n}\n\nexport default Experience\n","import React from 'react'\nimport uniqid from 'uniqid'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nconst InputForm = (props) => {\n  return (\n    <div>\n      <Input\n        id=\"school\"\n        placeholder=\"School/University/Institution\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <Input\n        id=\"degree\"\n        placeholder=\"Degree/Certification\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <Input\n        id=\"schoolLocation\"\n        placeholder=\"Location\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <TextField\n        type=\"month\"\n        id=\"graduation\"\n        label=\"Graduation Date\"\n        style={{ width: '325px' }}\n        InputLabelProps={{ shrink: true }}\n      />\n      <br></br>\n      <TextField\n        id=\"accomplishments\"\n        multiline\n        rows={3}\n        placeholder=\"Noteworthy Accomplishments/Honors\"\n        style={{ width: '325px' }}\n      />\n      <br></br>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        style={{ marginTop: '7px' }}\n        onClick={() => props.submitNewSchool()}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nconst School = (props) => {\n  return (\n    <li>\n      <div style={{ display: 'flex' }}>\n        <Typography variant=\"body1\" style={{ lineHeight: '30px' }}>\n          {props.school}\n        </Typography>\n        <IconButton\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          style={{ padding: '0px 3px' }}\n          onClick={() => props.deleteSchool(props.schoolID)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </div>\n      <Typography variant=\"body1\">{props.schoolLocation}</Typography>\n      <Typography variant=\"body1\">\n        {props.degree}, {props.graduationDisplay}\n      </Typography>\n      <Typography variant=\"body2\">{props.accomplishments}</Typography>\n      <br></br>\n    </li>\n  )\n}\n\nconst Education = (props) => {\n  const schools = props.resumeData.schools\n  const schoolList = schools.map((school) => (\n    <School\n      key={uniqid()}\n      school={school.school}\n      schoolLocation={school.schoolLocation}\n      degree={school.degree}\n      graduationDisplay={school.graduationDisplay}\n      accomplishments={school.accomplishments}\n      deleteSchool={props.deleteSchool}\n      schoolID={school.schoolID}\n    />\n  ))\n\n  return (\n    <div>\n      <CardHeader title=\"Education\" />\n      <InputForm submitNewSchool={props.submitNewSchool} />\n      <ul>{schoolList}</ul>\n    </div>\n  )\n}\n\nexport default Education\n","import React from 'react'\nimport uniqid from 'uniqid'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nconst InputForm = (props) => {\n  return (\n    <div>\n      <Input id=\"skill\" placeholder=\"Skill\"/>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        style={{ marginLeft: '7px' }}\n        onClick={() => props.submitNewSkill()}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nconst Skill = (props) => {\n  return (\n    <li style={{ display: 'flex' }}>\n      <Typography variant=\"body1\" style={{ lineHeight: '30px' }}>\n        {props.skill}\n      </Typography>\n      <IconButton\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n        onClick={() => props.deleteSkill(props.skillID)}\n      >\n        <DeleteIcon/>\n      </IconButton>\n    </li>\n  )\n}\n\nconst Skills = (props) => {\n  const skills = props.resumeData.skills\n  const skillsList = skills.map((skill) => (\n    <Skill\n      key={uniqid()}\n      skill={skill.skill}\n      deleteSkill={props.deleteSkill}\n      skillID={skill.skillID}\n    />\n  ))\n\n  return (\n    <div>\n      <CardHeader title=\"Skills\" />\n      <InputForm submitNewSkill={props.submitNewSkill} />\n      <ul>{skillsList}</ul>\n    </div>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport uniqid from 'uniqid'\nimport Typography from '@material-ui/core/Typography'\nimport EmailIcon from '@material-ui/icons/Email'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport Link from '@material-ui/core/Link'\n\nconst Address = (props) => {\n  //initiate variable to later hold react element for render through return statement\n  let addressElement\n\n  //format address inputs, assumes standard U.S. format\n  if (props.address && props.address.includes(',')) {\n    let arrayLength = props.address.split(',').length\n\n    let street = props.address.split(',')[0]\n\n    //if the address contains something like apt or unit number\n    if (arrayLength === 4) street = `${street}, ${props.address.split(',')[1]}`\n\n    let cityStateZip = `${props.address.split(',')[arrayLength - 2]}, ${\n      props.address.split(',')[arrayLength - 1]\n    }`\n\n    addressElement = (\n      <Typography variant=\"body2\" align=\"right\" style={styles.contactData}>\n        {street}\n        <br></br>\n        {cityStateZip}\n      </Typography>\n    )\n  } else {\n    //if the address doesn't have typical U.S. formatting with commas, split it into lines of certain length\n    let splitStr = props.address.split(' ')\n    let str = ''\n    let firstLine\n    let secondLine\n\n    for (let i = 0; i < splitStr.length; i++) {\n      let newStr = (str += `${splitStr[i]} `)\n\n      if (newStr.length < 34 && str.length < 34) {\n        firstLine = newStr\n      } else {\n        secondLine = newStr.slice(-newStr.length + firstLine.length)\n      }\n    }\n\n    addressElement = (\n      <Typography\n        variant=\"body2\"\n        align=\"right\"\n        style={{ ...styles.contactData, right: '150px' }}\n      >\n        {firstLine}\n        <br></br>\n        {secondLine}\n      </Typography>\n    )\n  }\n\n  return addressElement\n}\n\n// code organization throughout for sections with multiple potential entries:\n// one element describing render of one list item, second element rendering array of list items\nconst School = (props) => {\n  return (\n    <div>\n      <li style={styles.educationAndSkillsLi}>\n        <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n          {props.school.toUpperCase()}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          style={{ fontWeight: 'bold', fontStyle: 'italic' }}\n        >\n          {props.schoolLocation}\n        </Typography>\n        <Typography variant=\"body1\">{props.degree}</Typography>\n        <Typography variant=\"body1\">{props.graduationDisplay}</Typography>\n        <Typography variant=\"body2\">{props.accomplishments}</Typography>\n      </li>\n    </div>\n  )\n}\n\nconst Education = (props) => {\n  const schools = props.schools\n  const schoolList = schools.map((school) => (\n    <School\n      key={uniqid()}\n      school={school.school}\n      schoolLocation={school.schoolLocation}\n      degree={school.degree}\n      graduationDisplay={school.graduationDisplay}\n      accomplishments={school.accomplishments}\n      schoolID={school.schoolID}\n    />\n  ))\n\n  return (\n    <div>\n      <ul style={{ paddingLeft: '0' }}>{schoolList}</ul>\n    </div>\n  )\n}\n\nconst Skill = (props) => {\n  return (\n    <li style={{ ...styles.educationAndSkillsLi, marginBottom: '.1in' }}>\n      <Typography variant=\"body1\">{props.skill}</Typography>\n    </li>\n  )\n}\n\nconst Skills = (props) => {\n  const skills = props.skills\n  const skillsList = skills.map((skill) => (\n    <Skill key={uniqid()} skill={skill.skill} skillID={skill.skillID} />\n  ))\n\n  return (\n    <div>\n      <ul style={{ paddingLeft: '0' }}>{skillsList}</ul>\n    </div>\n  )\n}\n\nconst Responsibility = (props) => {\n  return (\n    <li>\n      <Typography variant=\"body2\">{props.description}</Typography>\n    </li>\n  )\n}\n\nconst Job = (props) => {\n  const responsibilities = props.responsibilities\n  const responsibilitiesList = responsibilities.map((responsibility) => (\n    <Responsibility key={uniqid()} description={responsibility.description} />\n  ))\n\n  return (\n    <li style={styles.jobs}>\n      <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n        {props.job.toUpperCase()}\n      </Typography>\n      <Typography variant=\"body1\">\n        {props.company}, {props.jobLocation} / {props.start} to{' '}\n        {props.endDisplay}\n      </Typography>\n      <ul>{responsibilitiesList}</ul>\n    </li>\n  )\n}\n\nconst Experience = (props) => {\n  const jobs = props.jobs\n  const jobsList = jobs.map((job) => (\n    <Job\n      key={uniqid()}\n      company={job.company}\n      job={job.job}\n      description={job.description}\n      jobLocation={job.jobLocation}\n      start={job.start}\n      endDisplay={job.endDisplay}\n      deleteJob={props.deleteJob}\n      jobID={job.jobID}\n      responsibilities={job.responsibilities}\n    />\n  ))\n\n  return (\n    <div>\n      <ul style={{ paddingLeft: '0' }}>{jobsList}</ul>\n    </div>\n  )\n}\n\nconst customGoldColor = 'rgb(195,157,57)'\n\nconst styles = {\n  resumeContainer: {\n    height: '11in',\n    width: '8.5in',\n    zIndex: '-1',\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    margin: '0px auto',\n    outline: `.03in solid ${customGoldColor}`,\n    outlineOffset: '-.03in',\n  },\n  resumeHeader: {\n    height: '2.2in',\n    borderBottom: `.03in solid ${customGoldColor}`,\n    display: 'inline-block',\n    verticalAlign: 'top',\n  },\n  contactDataSection: {\n    height: '2.2in',\n    width: '2.9in',\n    justifyContent: 'spaceBetween',\n    flexDirection: 'column',\n    borderBottom: `.03in solid ${customGoldColor}`,\n    borderRight: `.03in solid ${customGoldColor}`,\n    backgroundColor: 'rgb(80,80,80)',\n    zIndex: '1',\n  },\n  clearFloats: {\n    clear: 'both',\n  },\n  contactData: {\n    float: 'right',\n    marginRight: '.1in',\n    marginBottom: '.2in',\n    paddingLeft: 'min(5px)',\n    wordWrap: 'break-word',\n    maxWidth: '29ch',\n    color: 'white',\n    zIndex: '1',\n  },\n  contactIcon: {\n    float: 'right',\n    marginRight: '.15in',\n    color: 'white',\n    zIndex: '1',\n  },\n  nameBox: {\n    height: '1.4in',\n    width: '4.8in',\n    margin: '0.45in auto 0 auto',\n    backgroundColor: 'rgb(80,80,80)',\n  },\n  resumeBody: {\n    display: 'inline-block',\n    verticalAlign: 'top',\n  },\n  resumeBodyHeaders: {\n    textAlign: 'center',\n    letterSpacing: '0.25em',\n    marginTop: '.3in',\n  },\n  educationAndSkills: {\n    height: '8.77in',\n    width: '2.9in',\n    borderRight: `.03in solid ${customGoldColor}`,\n    backgroundColor: 'rgb(80,80,80)',\n    zIndex: '-1',\n  },\n  educationAndSkillsLi: {\n    color: 'white',\n    listStyleType: 'none',\n    textAlign: 'right',\n    margin: '0 .25in .3in .1in',\n  },\n  objectiveAndExperience: {\n    width: '5.17in',\n    margin: '0in .2in',\n  },\n  jobs: {\n    listStyleType: 'none',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'white',\n  },\n}\n\nconst ResumePreview = (props) => {\n  return (\n    <div style={{ ...styles.resumeContainer, top: `${props.resumeTop}px` }}>\n      <div>\n        {' '}\n        {/* Top portion of resume - name, title, and contact info */}\n        <div style={{ ...styles.resumeHeader, ...styles.contactDataSection }}>\n          {' '}\n          {/* Contact data section */}\n          <div style={styles.clearFloats}>\n            {' '}\n            {/* email */}\n            <EmailIcon\n              fontSize=\"small\"\n              style={{ ...styles.contactIcon, marginTop: '.25in' }}\n            />\n            <Typography\n              variant=\"body2\"\n              style={{ ...styles.contactData, marginTop: '.25in' }}\n            >\n              {props.resumeData.personalData.email}\n            </Typography>\n          </div>\n          <div style={styles.clearFloats}>\n            {' '}\n            {/* phone number */}\n            <PhoneIcon fontSize=\"small\" style={styles.contactIcon} />\n            <Typography variant=\"body2\" style={styles.contactData}>\n              {props.resumeData.personalData.phone}\n            </Typography>\n          </div>\n          <div style={styles.clearFloats}>\n            {' '}\n            {/* address */}\n            <LocationOnIcon fontSize=\"small\" style={styles.contactIcon} />\n            <Address address={props.resumeData.personalData.address} />\n          </div>\n          {props.resumeData.personalData.github && (\n            <div style={styles.clearFloats}>\n              {' '}\n              {/* github, if it was entered */}\n              <GitHubIcon fontSize=\"small\" style={styles.contactIcon} />\n              <Typography variant=\"body2\" style={styles.contactData}>\n                <Link\n                  href={`https://${props.resumeData.personalData.github}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={styles.link}\n                >\n                  {props.resumeData.personalData.github}\n                </Link>\n              </Typography>\n            </div>\n          )}\n        </div>\n        <div style={{ ...styles.resumeHeader, width: '5.57in' }}>\n          {' '}\n          {/* Name and title */}\n          <div style={styles.nameBox}>\n            {' '}\n            {/* Box containing first and last names */}\n            <Typography /* first name */\n              variant=\"h3\"\n              align=\"center\"\n              style={{ color: 'white' }}\n              gutterBottom\n            >\n              {props.resumeData.personalData.firstName}\n            </Typography>\n            <Typography /* last name */\n              variant=\"h3\"\n              align=\"center\"\n              style={{ color: `${customGoldColor}` }}\n            >\n              {props.resumeData.personalData.lastName}\n            </Typography>\n          </div>\n          <Typography /* title */\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n          >\n            {props.resumeData.personalData.title}\n          </Typography>\n        </div>\n      </div>\n      <div>\n        {' '}\n        {/* Bottom portion of resume - left: skills, education; right: career objective, experience */}\n        <div style={{ ...styles.resumeBody, ...styles.educationAndSkills }}>\n          {' '}\n          {/* education and skills */}\n          {props.resumeData.schools.length > 0 && (\n            <div>\n              {' '}\n              {/* education */}\n              <Typography\n                variant=\"h5\"\n                style={{\n                  ...styles.resumeBodyHeaders,\n                  color: `${customGoldColor}`,\n                }}\n              >\n                EDUCATION\n              </Typography>\n              <Education schools={props.resumeData.schools} />\n            </div>\n          )}\n          <Typography /* skills */\n            variant=\"h5\"\n            style={{ ...styles.resumeBodyHeaders, color: `${customGoldColor}` }}\n          >\n            SKILLS\n          </Typography>\n          <Skills skills={props.resumeData.skills} />\n        </div>\n        <div style={{ ...styles.resumeBody, ...styles.objectiveAndExperience }}>\n          {' '}\n          {/* career objective and experience */}\n          <div>\n            {' '}\n            {/* career objective */}\n            <Typography\n              variant=\"h5\"\n              style={{ ...styles.resumeBodyHeaders, color: 'black' }}\n            >\n              CAREER OBJECTIVE\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              style={{ marginTop: '.20in', display: 'inline-block' }}\n            >\n              {props.resumeData.careerObjective}\n            </Typography>\n          </div>\n          <div>\n            {' '}\n            {/* experience */}\n            <Typography\n              variant=\"h5\"\n              style={{ ...styles.resumeBodyHeaders, color: 'black' }}\n            >\n              EXPERIENCE\n            </Typography>\n            <Experience jobs={props.resumeData.jobs} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ResumePreview\n","import React, { useState, useEffect, useRef } from 'react'\nimport uniqid from 'uniqid'\nimport ReactToPrint from 'react-to-print'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Header from './components/Header'\nimport Experience from './components/Experience'\nimport Education from './components/Education'\nimport Skills from './components/Skills'\nimport ResumePreview from './components/ResumePreview'\n\nfunction App() {\n  const [isInputting, setIsInputting] = useState(true)\n\n  const blankResumeData = {\n    personalData: {\n      firstName: '',\n      lastName: '',\n      title: '',\n      phone: '',\n      email: '',\n      address: '',\n      github: '',\n    },\n    careerObjective: '',\n    jobs: [],\n    schools: [],\n    skills: [],\n  }\n\n  const [resumeData, setResumeData] = useState(\n    //load data saved in local storage if it exists, otherwise start with a blank copy\n    localStorage.getItem('resumeDataJSON')\n      ? JSON.parse(localStorage.getItem('resumeDataJSON'))\n      : blankResumeData,\n  )\n\n  useEffect(() => {\n    //save data to local storage every time the page renders\n    localStorage.setItem('resumeDataJSON', JSON.stringify(resumeData))\n  })\n\n  const [editing, setEditing] = useState({\n    firstName: false,\n    lastName: false,\n    title: false,\n    phone: false,\n    email: false,\n    address: false,\n    github: false,\n    careerObjective: false,\n  })\n\n  const componentRef = useRef() //utility which enables printing of specific component\n\n  function savePersonalData(property, newValue) {\n    if (property === 'careerObjective') {\n      let careerObjective\n      careerObjective = newValue\n      setResumeData({ ...resumeData, careerObjective: careerObjective })\n    } else {\n      let personalDataArr = { ...resumeData.personalData }\n      personalDataArr[property] = newValue\n      setResumeData({ ...resumeData, personalData: personalDataArr })\n    }\n  }\n\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ]\n\n  function submitNewJob() {\n    //create a copy of resumeData to manipulate\n    const resumeDataCopy = JSON.parse(JSON.stringify(resumeData))\n\n    //create object literal and add values from input fields\n    let newJob = {}\n    newJob.company = document.querySelector('#company').value\n    newJob.job = document.querySelector('#job').value\n    newJob.jobLocation = document.querySelector('#jobLocation').value\n    newJob.jobID = `${newJob.company}${uniqid()}`\n\n    //convert dates into sortable values\n    if (document.querySelector('#start').value !== '') {\n      newJob.start = parseFloat(\n        document.querySelector('#start').value.replace('-', '.'),\n      )\n    }\n\n    if (document.querySelector('#end').value !== '') {\n      newJob.endSort = parseFloat(\n        document.querySelector('#end').value.replace('-', '.'),\n      )\n    } else newJob.endSort = 3000\n\n    //create array of job responsibilities\n    newJob.responsibilities = []\n    let numberOfResponsibilties =\n      document.querySelectorAll('.responsibilities').length\n\n    for (let i = 0; i < numberOfResponsibilties; i++) {\n      let newResponsibility = {}\n      newResponsibility.index = i\n      newResponsibility.description =\n        document.querySelectorAll('.responsibilities')[\n          i\n        ].children[0].children[0].value\n      if (newResponsibility.description) {\n        newJob.responsibilities.push(newResponsibility)\n      }\n    }\n\n    //change date formats to MMM YYYY format\n    if ('start' in newJob) {\n      let month = newJob.start.toString().split('.')[1]\n      month = months[month - 1]\n      let year = newJob.start.toString().split('.')[0]\n      newJob.start = `${month} ${year}`\n    }\n\n    if (newJob.endSort === 3000) {\n      newJob.endDisplay = 'Present'\n    } else {\n      let month = newJob.endSort.toString().split('.')[1]\n      month = months[month - 1]\n      let year = newJob.endSort.toString().split('.')[0]\n      newJob.endDisplay = `${month} ${year}`\n    }\n\n    //push newJob object to manipulable resumeDataCopy.jobs array\n    resumeDataCopy.jobs.push(newJob)\n\n    //sort the jobs by their end date\n    resumeDataCopy.jobs.sort((a, b) => {\n      return b.endSort - a.endSort\n    })\n\n    //set state hook\n    setResumeData({ ...resumeDataCopy })\n\n    //clear input fields\n    document.querySelector('#company').value = ''\n    document.querySelector('#job').value = ''\n    document.querySelectorAll('.responsibilities').value = ''\n    document.querySelector('#jobLocation').value = ''\n    document.querySelector('#start').value = ''\n    document.querySelector('#end').value = ''\n  }\n\n  function deleteJob(jobID) {\n    let jobsArray = [...resumeData.jobs]\n    let index = jobsArray.findIndex((x) => x.jobID === jobID)\n    jobsArray.splice(index, 1)\n\n    setResumeData({ ...resumeData, jobs: jobsArray })\n  }\n\n  function submitNewSchool() {\n    //create a copy of resumeData to manipulate\n    const resumeDataCopy = JSON.parse(JSON.stringify(resumeData))\n\n    //create object literal and add values from input fields\n    let newSchool = {}\n    newSchool.school = document.querySelector('#school').value\n    newSchool.degree = document.querySelector('#degree').value\n    newSchool.schoolLocation = document.querySelector('#schoolLocation').value\n    newSchool.accomplishments = document.querySelector('#accomplishments').value\n    newSchool.schoolID = `${newSchool.school}${uniqid()}`\n\n    if (document.querySelector('#graduation').value !== '') {\n      newSchool.graduationSort = parseFloat(\n        document.querySelector('#graduation').value.replace('-', '.'),\n      )\n    } else newSchool.graduationSort = 3000\n\n    //change date formats to MMM YYYY format\n    if (newSchool.graduationSort === 3000) {\n      newSchool.graduationDisplay = 'Present'\n    } else {\n      let month = newSchool.graduationSort.toString().split('.')[1]\n      month = months[month - 1]\n      let year = newSchool.graduationSort.toString().split('.')[0]\n      newSchool.graduationDisplay = `${month} ${year}`\n    }\n\n    //push newJob object to manipulable resumeDataCopy.jobs array\n    resumeDataCopy.schools.push(newSchool)\n\n    //sort the jobs by their end date\n    resumeDataCopy.schools.sort((a, b) => {\n      return b.graduationSort - a.graduationSort\n    })\n\n    //set state hook\n    setResumeData({ ...resumeDataCopy })\n\n    //clear input fields\n    document.querySelector('#school').value = ''\n    document.querySelector('#degree').value = ''\n    document.querySelector('#schoolLocation').value = ''\n    document.querySelector('#accomplishments').value = ''\n    document.querySelector('#graduation').value = ''\n  }\n\n  function deleteSchool(schoolID) {\n    let schoolsArray = [...resumeData.schools]\n    let index = schoolsArray.findIndex((x) => x.schoolID === schoolID)\n    schoolsArray.splice(index, 1)\n\n    setResumeData({ ...resumeData, schools: schoolsArray })\n  }\n\n  function submitNewSkill() {\n    //create a copy of resumeData to manipulate\n    const resumeDataCopy = JSON.parse(JSON.stringify(resumeData))\n\n    //create object literal and add values from input fields\n    let newSkill = {}\n    newSkill.skill = document.querySelector('#skill').value\n    newSkill.skillID = `${newSkill.skill}${uniqid()}`\n\n    //push newJob object to manipulable resumeDataCopy.jobs array\n    resumeDataCopy.skills.push(newSkill)\n\n    //set state hook\n    setResumeData({ ...resumeDataCopy })\n\n    //clear input fields\n    document.querySelector('#skill').value = ''\n  }\n\n  function deleteSkill(skillID) {\n    let skillsArray = [...resumeData.skills]\n    let index = skillsArray.findIndex((x) => x.skillID === skillID)\n    skillsArray.splice(index, 1)\n\n    setResumeData({ ...resumeData, skills: skillsArray })\n  }\n\n  const styles = {\n    centeredDiv: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    cardsWithMargins: {\n      marginTop: '30px',\n      marginLeft: '50px',\n      marginRight: '50px',\n    },\n  }\n\n  return (\n    <div style={{ paddingBottom: '50px' }}>\n      <Card style={{ marginBottom: '50px' }}>\n        {/* Top buttons - input, preview, clear and, conditionally, print */}\n        <CardContent style={styles.centeredDiv}>\n          <Button\n            variant=\"contained\"\n            {...(isInputting ? { disabled: true } : { color: 'primary' })}\n            size=\"small\"\n            onClick={() => setIsInputting(true)}\n          >\n            Input Resume Data\n          </Button>\n          <Button\n            variant=\"contained\"\n            {...(!isInputting ? { disabled: true } : { color: 'primary' })}\n            size=\"small\"\n            onClick={() => setIsInputting(false)}\n          >\n            Preview Formatted Resume\n          </Button>\n          {!isInputting && (\n            <ReactToPrint\n              content={() => componentRef.current}\n              documentTitle={`Resume - ${resumeData.personalData.firstName} ${resumeData.personalData.lastName}`}\n              trigger={() => (\n                <Button variant=\"contained\" color=\"primary\" size=\"small\">\n                  Print to PDF\n                </Button>\n              )}\n            />\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={() => setResumeData(blankResumeData)}\n          >\n            Clear All Data\n          </Button>\n        </CardContent>\n      </Card>\n\n      {isInputting ? (\n        <div>\n          {/* Input Version */}\n          <Card style={styles.cardsWithMargins}>\n            <CardContent>\n              <Header\n                resumeData={resumeData}\n                editing={editing}\n                setEditing={setEditing}\n                savePersonalData={savePersonalData}\n              />\n            </CardContent>\n          </Card>\n          <Card style={styles.cardsWithMargins}>\n            <CardContent>\n              <Experience\n                resumeData={resumeData}\n                submitNewJob={submitNewJob}\n                deleteJob={deleteJob}\n              />\n            </CardContent>\n          </Card>\n          <Card style={styles.cardsWithMargins}>\n            <CardContent>\n              <Education\n                resumeData={resumeData}\n                submitNewSchool={submitNewSchool}\n                deleteSchool={deleteSchool}\n              />\n            </CardContent>\n          </Card>\n          <Card style={styles.cardsWithMargins}>\n            <CardContent>\n              <Skills\n                resumeData={resumeData}\n                submitNewSkill={submitNewSkill}\n                deleteSkill={deleteSkill}\n              />\n            </CardContent>\n          </Card>\n        </div>\n      ) : (\n        <div ref={componentRef}>\n          {/* Preview Version */}\n          <ResumePreview resumeData={resumeData} resumeTop={120} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}